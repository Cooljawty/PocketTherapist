name: full-test-suite
on: [push, pull_request]

env:
  TEST: 0
  INTEG: 0

jobs:
  full-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

# Java
#      - name: Setup JDK
#        uses: actions/setup-java@v3
#        with:
#          java-version: '20'
#          distribution: oracle
#
## Android SDK
#      - name: Android SDK Setup
#        uses: android-actions/setup-android@v3.0.0
#
#      - name: Install required emulator deps
#        run: |
#          sudo apt-get install libpulse0
#          egrep -c '(vmx|svm)' /proc/cpuinfo
#          exit 0
#
#      - name: Install Android system.img
#        run: sdkmanager --install 'system-images;android-34;google_apis;x86_64'
#
## Configure android emulator
#      - name: Create an Emulator
#        run: echo "no" | avdmanager  --verbose create avd --force --name testrunner --package 'system-images;android-34;google_apis;x86_64' --device "pixel_7"
#      
#      - name: Make sym link for avd
#        run: ln -s $HOME/.config/.android/avd $HOME/.android
#     
#      - name: Run the emulators
#        run: $ANDROID_HOME/emulator/emulator @testrunner -noaudio -no-sim -no-boot-anim -no-snapshot 2>&1 & 
#
#      - name: Wait for boot
#        run: $ANDROID_HOME/platform-tools/adb wait-for-device shell 'while [[ -z $(getprop sys.boot_completed | tr -d '\r') ]]; do sleep 1; done' $ANDROID_HOME/platform-tools/adb devices echo "Emulator started"
#
#      - name: Kill the emulator
#        run: adb devices | grep emulator | cut -f1 | while read line; do adb -s $line emu kill; done

      - name: Install Flutter
        uses: britannio/action-install-flutter@v1.1
 
      - name: Install Flutter Deps
        working-directory: ./pocket_therapist
        run:  flutter pub get
 
      - name: Run Flutter analysis
        working-directory: ./pocket_therapist
        run:  flutter analyze
 
      - name: Find test folders
        id: check-folder
        run: |
          ls -la ./pocket_therapist
          if [ -d "./pocket_therapist/test" ]; then
            TEST=1
          fi
          if [ -d "./pocket_therapist/integration_test" ]; then
            INTEG=1
          fi
          echo "$TEST / $INTEG"
 
      - name: Run Widget Tests
        working-directory: ./pocket_therapist
        run: |
          if [ "$TEST" -eq 1 ]; then
            flutter test --branch-coverage
            echo "Running tests..."
          else
            echo "No tests found, not running."
          fi
 
      - name: Run integration tests
        working-directory: ./pocket_therapist
        run: |
          if [ "$INTEG" -eq 1 ]; then
            flutter test integration_test --merge --branch-coverage
          else
            echo "No tests found, not running..."
          fi
 
      - name: Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
        with:
          files: ./pocket_therapist/coverage/lcov.info
          name: code-coverage
 
